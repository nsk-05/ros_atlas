<?xml version="1.0"?>

<robot name="bot" xmlns:xacro="http://www.ros.org/wiki/xacro">

	<!-- Import bot  wheels -->
	<xacro:include filename="$(find bot_description)/urdf/wheels/omni_wheel.urdf.xacro" />
	<xacro:include filename="$(find bot_description)/urdf/base/bot_base.urdf.xacro" />
	<xacro:include filename="$(find bot_description)/urdf/base/custom_base.gazebo.xacro" />
	<!-- Wheel parameters -->
	<!-- <xacro:property name="wheel_offset_x" value="0.2225" />    x,y,z in translation from base_link to the center of the wheel -->
	<!-- <xacro:property name="wheel_offset_y" value="0.2045" /> -->
	<!-- <xacro:property name="wheel_offset_z" value="0.0" /> -->
	<xacro:property name="wheel_offset_x" value="0.4450" />    <!-- x,y,z in translation from base_link to the center of the wheel -->
	<xacro:property name="wheel_offset_y" value="0.4090" />
	<xacro:property name="wheel_offset_z" value="0.0" />

	<xacro:macro name="robot">
		<xacro:bot_base/>

		<xacro:omni_wheel prefix="bot_front_right" parent="base_link" reflect="false">
			<origin xyz="${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="bot_front_left" parent="base_link" reflect="true">
			<origin xyz="${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="bot_back_left" parent="base_link" reflect="true">
			<origin xyz="-${wheel_offset_x} ${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_wheel prefix="bot_back_right" parent="base_link" reflect="false">
			<origin xyz="-${wheel_offset_x} -${wheel_offset_y} ${wheel_offset_z}" rpy="0 0 0"/>
		</xacro:omni_wheel>

		<xacro:omni_steering />
   </xacro:macro>
   <xacro:include filename="$(find bot_description)/urdf/tags/apriltag_marker.xacro" />

   <xacro:apriltag_marker namespace="" name="apriltag0" parent="base_link" family="36h11" ID="0" size="0.5"> 
    <origin xyz="0.0 0 0.625" rpy=" 0 0 0" />
   </xacro:apriltag_marker>
   <xacro:robot/>
   
   <link name="package_platform">
		<inertial>
		<mass value="0.1" />
		<origin xyz="0 0.1 0" rpy="0 0 1.5717"/>
		<inertia  ixx="0.1" ixy="0.0"  ixz="0.0"  iyy="0.1"  iyz="0.0"  izz="0.1" />
		</inertial>
		<collision>
       <origin xyz="0 0.15 0" rpy="0 0 0" />
			<geometry>
				<box size="0.25 0.5 0.05" />
			</geometry>
    	</collision>
		<visual>
		    <origin xyz="0.0 0.15 0" rpy="0 0 1.5717" />
			<geometry>
			<box size="0.25 0.5 0.05" />
			</geometry>
		</visual>
	</link>
	<joint name="package_platform_joint" type="revolute">
		  <origin xyz="0.85 0 0.625" rpy="0 0 1.5717" /> 
		  <parent link="base_link"/>
		  <child link="package_platform" />
		  <limit effort="50.0" lower="-1.57" upper="1.57" velocity="100"/>
	</joint>
	<transmission name="platform">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="package_platform_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="package_platform_motor">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <gazebo>
  <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/</robotNamespace>
  </plugin>
</gazebo>
</robot>

